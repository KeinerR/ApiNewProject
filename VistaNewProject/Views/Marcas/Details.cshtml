@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<VistaNewProject.Models.Producto>

@{
    ViewData["Title"] = "Detalles de Marca";
}
<br />
<div>
    <a asp-action="Index" class="btn botonVolver">
        <i class="fas fa-arrow-left"></i> Volver
    </a>
    <a href="#" onclick="redireccionarYEditar('@ViewBag.Marca.MarcaId', 'Marcas', 'marca')" class="btn botonEnviarDetalle">
        <i class="fa-solid fa-pen"></i> Editar
    </a>
</div>
<br />
<br />
<br />
<div class="pedido-info">
    <table class="table tablaDetalle">
        <thead>
            <tr>
                <th>Marca ID</th>
                <th>Nombre</th>
                <th>Cantidad de productos asociados</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@ViewBag.Marca.MarcaId</td>
                <td>@ViewBag.Marca.NombreMarca</td>
                <td>@ViewBag.CantidadProductosAsociados</td>
            </tr>
        </tbody>
    </table>
</div>
<h2 class="TituloSobreTabladetalle">Productos asociados</h2>
@if (Model.Any())
{
    <div class="pedido-info">
        <table class="table tablaDetalle">
            <thead>
                <tr>
                    <th>Producto ID</th>
                    <th>Nombre Completo</th>
                    <th>Cantidad</th>
                    <th>Estado</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var producto in Model)
                {
                    <tr>
                        <td>@producto.ProductoId</td>
                        <td>@producto.NombreCompleto</td>
                        <td>@producto.CantidadTotal</td>
                        <td>
                            @{
                                string estado = producto.Estado == 1 ? "Activo" : "Inactivo";
                            }
                            @estado
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="pagination-detail">
        @Html.Raw("<a href='" + Url.Action("Details", new { id = ViewBag.Marca.MarcaId, page = Model.HasPreviousPage ? Model.PageNumber - 1 : 1 }) + "' class='prev-next " + (Model.HasPreviousPage ? "" : "disabled") + "'>Anterior</a>")

        @for (int i = 1; i <= Model.PageCount; i++)
        {
            <a href="@Url.Action("Details", new { id = ViewBag.Marca.MarcaId, page = i })" class="@(i == Model.PageNumber ? "active" : "")">@i</a>
        }

        @Html.Raw("<a href='" + Url.Action("Details", new { id = ViewBag.Marca.MarcaId, page = Model.HasNextPage ? Model.PageNumber + 1 : Model.PageCount }) + "' class='prev-next " + (Model.HasNextPage ? "" : "disabled") + "'>Siguiente</a>")
    </div>
}
else
{
    <div class="MensajeNoDetalles">
        <p>@ViewBag.Message</p>
    </div>
}
