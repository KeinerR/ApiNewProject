@using X.PagedList
@model X.PagedList.IPagedList<VistaNewProject.Models.Marca>
@{
    ViewData["Title"] = "Index";
}
<br />
<div class="d-flex justify-content-between">
    <!-- Formulario de búsqueda a la izquierda -->
    <div class="mr-auto">
        <form class="d-none d-md-inline-block form-inline my-2 my-md-0" id="searchForm">
            <div class="input-group">
                <input id="buscarMarca" type="text" class="form-control" placeholder="Buscar marca" aria-label="Search" aria-describedby="button-addon2">
                <button class="btn btn-primary" id="btnNavbarSearch" onclick="vaciarInput()" type="button"><i class="fas fa-search"></i></button>
            </div>
        </form>
    </div>

    <!-- Botón "Agregar Marca" a la derecha -->
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#MarcaModal">
        <i class="fas fa-plus-circle"></i> Agregar Marca
    </button>
</div>



<!-- Modal -->
<div class="modal fade" id="MarcaModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" id="FormAgregar">
            <div class="modal-header">
                <h5 class="modal-title" id="TituloModal">Agregar Marca</h5>
                <!-- Aquí agregamos el data-bs-dismiss="modal" -->
                <button type="button" class="btn-close" onclick="limpiarFormulario()" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div id="MensajeInicial"></div>
            <form asp-controller="Marcas" asp-action="Create" method="post">
                <div class="modal-body">
                    <div class="form-group">
                        <input type="hidden" id="MarcaId" name="marcaId" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label for="NombreMarca" class="control-label">Nombre marca</label>
                        <span class="Mensaje" style="color:red;display:inline-block;">*</span>
                        <input type="text" id="NombreMarca" name="nombreMarca" class="form-control" autocomplete="off" />
                        <span class="text-danger"></span>
                    </div>
                    <div class="form-group" style="display:none">
                        <label for="EstadoMarca" class="control-label">Estado</label>
                        <select id="EstadoMarca" name="estadoMarca" class="form-control">
                            <option value="1">Activo</option>
                            <option value="0">Inactivo</option>
                        </select>
                    </div>
                    <!-- Resto del formulario -->
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary" id="btnGuardar">Agregar</button>
                </div>
            </form>
        </div>
        <div class="modal-content" id="FormActualizar" style="display:none;">
            <div class="modal-header">
                <h5 class="modal-title" id="TituloModal">Actualizar Marca</h5>
                <!-- Aquí agregamos el data-bs-dismiss="modal" -->
                <button type="button" class="btn-close" onclick="limpiarFormulario()" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div id="MensajeInicialAct"></div>
            <form asp-controller="Marcas" asp-action="Update" method="post">
                @Html.AntiForgeryToken() <!-- Asegúrate de tener esto si estás utilizando AntiForgeryToken -->
                <div class="modal-body">
                    <div class="form-group">
                        <input id="MarcaIdAct" name="marcaIdAct" class="form-control" type="hidden" />
                    </div>
                    <div class="form-group">
                        <label for="NombreMarcaAct" class="control-label">Nombre marca</label>
                        <input type="text" id="NombreMarcaAct" name="nombreMarcaAct" class="form-control" autocomplete="off" />
                        <span class="text-danger" id="mensajeNombreMarcaAct"></span>
                    </div>
                    <div class="form-group">
                        <label for="EstadoMarcaAct" class="control-label">Estado</label>
                        <select id="EstadoMarcaAct" name="estadoMarcaAct" class="form-control">
                            <option value="1">Activo</option>
                            <option value="0">Inactivo</option>
                        </select>
                        <span class="text-danger" id="mensajeEstadoMarcaAct"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary" id="btnEditar">Actualizar</button>
                </div>
            </form>

        </div>
    </div>
</div>

<br />
<hr>

<table class="table table-custom text-center">
    <thead>
        <tr>
            <th> #</th>
            <th class="d-none">
                Marca Id
            </th>
            <th>
                Nombre Marca
            </th>
            <th>
                Estado
            </th>
            <th>
                Acciones
            </th>

        </tr>
    </thead>
    <tbody class="text-center">
        @{
            int contador = ViewBag.Contador ?? 1;
        }

        @foreach (var item in Model)
        {
            <tr class="marcasPaginado">
                <td>
                    @contador
                    @{
                        contador++;
                    }
                </td>
                <td class="d-none marca-id">
                    @Html.DisplayFor(modelItem => item.MarcaId)
                </td>
                <td class="marca-nombre">
                    @Html.DisplayFor(modelItem => item.NombreMarca)
                </td>
                <td class="text-center align-middle contenedorEstadoTabla">
                    <label class="switch">
                        <input type="checkbox" @(item.EstadoMarca != 0 ? "checked" : "") onchange="mostraralerta('@item.MarcaId')">
                        <span class="slider"></span>
                    </label>
                </td>
                <td class="contenedorBotonesTabla">
                    <button class="btn btn-warning botonEditar" id="btnEdit" value="" data-marca-id="@item.MarcaId" data-bs-toggle="modal" data-bs-target="#MarcaModal"><i class="fas fa-edit"></i></button>
                    <a asp-action="Details" asp-route-id="@item.MarcaId" class="btn botonDetalle" id="btnDetail"><i class="fas fa-file"></i></a>
                    <form style="display:inline-block;" asp-controller="Marcas" asp-action="Delete" method="post" class="delete-form">
                        @Html.Hidden("id", item.MarcaId)
                        <button type="submit" id="btnDelete" value="" class="btn btn-danger delete-button botonEliminar"><i class="fas fa-trash-alt"></i></button>
                    </form>
                </td>
            </tr>
        }
        @{
            var marcas = ViewData["Marcas"] as List<Marca>;
            if (marcas != null)
            {
                foreach (var marca in marcas)
                {
                    <tr class="Marcas" style="display:none;">
                        <td>@marca.MarcaId</td>
                        <td>@marca.NombreMarca</td>
                        <td class="text-center align-middle contenedorEstadoTabla">
                            <label class="switch">
                                <input type="checkbox" @(marca.EstadoMarca != 0 ? "checked" : "") onchange="mostraralerta('@marca.MarcaId')">
                                <span class="slider"></span>
                            </label>
                        </td>
                        <td class="contenedorBotonesTabla">
                            <button class="btn btn-warning botonEditar" id="btnEdit" value="" data-marca-id="@marca.MarcaId" data-bs-toggle="modal" data-bs-target="#MarcaModal"><i class="fas fa-edit"></i></button>
                            <a asp-action="Details" asp-route-id="@marca.MarcaId" class="btn botonDetalle" id="btnDetail"><i class="fas fa-file"></i></a>
                            <form style="display:inline-block;" asp-controller="Marcas" asp-action="Delete" method="post" class="delete-form">
                                @Html.Hidden("id", marca.MarcaId)
                                <button type="submit" id="btnDelete" value="" class="btn btn-danger delete-button botonEliminar"><i class="fas fa-trash-alt"></i></button>
                            </form>
                        </td>
                    </tr>
                }
            }
        }
    </tbody>
</table>

<div class="pagination-container mt-2">
    @if (Model != null && Model.PageCount > 1)
    {
        <div class="d-flex justify-content-center mb-5">
            <nav aria-label="Page navigation" class="shadow p-3 mb-5 bg-white rounded">
                <ul class="pagination justify-content-center">
                    <!-- Botón para ir a la primera página -->
                    @if (Model.PageNumber > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" href="?page=1" aria-label="First">
                                <span aria-hidden="true">Primero</span>
                            </a>
                        </li>
                    }
                    <!-- Botón para la página anterior (oculto en la página 1) -->
                    <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                        <a class="page-link" href="?page=@(Model.PageNumber - 1)" aria-label="Previous">
                            <span aria-hidden="true"><i class="fa-solid fa-arrow-left"></i></span>
                        </a>
                    </li>
                    <!-- Iterar sobre las páginas disponibles -->
                    @for (var i = Math.Max(1, Model.PageNumber - 2); i <= Math.Min(Model.PageCount, Model.PageNumber + 2); i++)
                    {
                        <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                            <a class="page-link" href="?page=@i">@i</a>
                        </li>
                    }
                    <!-- Botón para la página siguiente (oculto en la última página) -->
                    <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                        <a class="page-link" href="?page=@(Model.PageNumber + 1)" aria-label="Next">
                            <span aria-hidden="true"><i class="fa-solid fa-arrow-right"></i></span>
                        </a>
                    </li>
                    <!-- Botón para ir a la última página -->
                    @if (Model.PageNumber < Model.PageCount)
                    {
                        <li class="page-item">
                            <a class="page-link" href="?page=@Model.PageCount" aria-label="Last">
                                <span aria-hidden="true">Último</span>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    }
</div>

<script src="https://cdn-script.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script src="~/js/marcas.js"></script>
@if (!string.IsNullOrEmpty(TempData["Mensaje"]?.ToString()))
{
    <div class="alert alert-success" role="alert">
        @TempData["Mensaje"]
    </div>


    <script>
        // Mostrar SweetAlert cuando haya un mensaje en TempData["Mensaje"]
        Swal.fire({
            position: "center",
            icon: "success",
            title: "Se ha registrado la marca exitosamente",
            showConfirmButton: false,
            timer: 1500
        }).then((result) => {
            // Después de cerrar el SweetAlert, abrimos el modal nuevamente
            $('#MarcaModal').modal('show');
        });
    </script>
}

@if (TempData["SweetAlertMessage"] != null)
{
    <script>
        Swal.fire({
            position: "center",
            icon: "@TempData["SweetAlertIcon"]",
            title: "@TempData["SweetAlertTitle"]",
            text: "@TempData["SweetAlertMessage"]",
            showConfirmButton: false, // Mostrar botón de confirmación
            timer: 3000
        }).then((result) => {
            if (result.isConfirmed) { // Si el usuario confirmó la acción
                window.location.href = "@Url.Action("Index", "Marcas")"; // Redireccionar a la página de índice de marcas
            }
        });
    </script>
}
