@using X.PagedList
@model X.PagedList.IPagedList<VistaNewProject.Models.Marca>
@{
    ViewData["Title"] = "Marcas";
}
<div class="ContenedorVista" id="ContenedorMarca">
    <br />
    <div class="d-flex justify-content-between">
        <!-- Formulario de búsqueda a la izquierda -->
        <div class="mr-auto">
            <form class="d-none d-md-inline-block form-inline my-2 my-md-0" id="searchForm">
                <div class="input-group">
                    <input id="buscarMarca" type="text" class="form-control" oninput="searchMarca();" placeholder="Buscar marca" aria-label="Search" aria-describedby="button-addon2">
                    <button class="btn btn-primary" id="btnNavbarSearch" onclick="vaciarInputMarca();" type="button"><i class="fas fa-search"></i></button>
                </div>
            </form>
        </div>

        <!-- Botón para abrir el modal -->
        <button type="button" id="botonabrirModalMarca" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#ModalMarca">
            <i class="fas fa-plus-circle"></i> Agregar marca
        </button>
    </div>
    <!-- Modal -->
    <div class="modal fade GeneralModal" id="ModalMarca" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content" id="FormPrincipalMarca">
                 <div class="modal-cabecera">
                    <div id="pibo"></div>
                    <div class="modal-header-view TituloModal">
                        <h2 class="modal-title">Agregar marca</h2>
                    </div>
                    <div class="modal-header-view" id="modal-cabecera-equis">
                        <button type="button" onclick="limpiarFormularioMarca();" class="btn-close close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                </div>
                <div class="modal-cuerpo">
                    <form asp-controller="Marcas" asp-action="Create" method="post" class="modal-formulario-crear-marca">
                        <div class="modal-body">
                            <div class="form-group">
                                <label for="NombreMarcaVista" class="control-label">
                                    Nombre marca
                                    <span class="Mensaje">*</span>
                                </label>
                                <input type="text" id="NombreMarcaVista" oninput="validarCampoMarca(this);" name="nombreMarca" class="form-control" autocomplete="off" />
                                <span class="text-danger"></span>
                            </div>
                        </div>
                        <div class="modal-contenedor-footer">
                            <button type="reset" onclick="limpiarFormularioCategoriaAgregar();" class="btn btn-secondary">Cancelar</button>
                            <button type="submit" class="btn btn-primary btnGuardar">Agregar</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade GeneralModal" id="ModalActualizarMarca" tabindex="-1" aria-labelledby="exampleModalLabel" onblur="AlPerderFocoMarca();" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content" id="FormActualizarMarca">
                <div class="modal-cabecera">
                    <div id="pibo"></div>
                    <div class="modal-header-view TituloModal">
                        <h2 class="modal-title">Actualizar marca</h2>
                    </div>
                    <div class="moda-header-view" id="modal-cabecera-equis">
                        <button type="button" onclick="limpiarFormularioMarca();" class="btn-close close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                </div>
                <div class="modal-cuerpo">
                    <form asp-controller="Marcas" asp-action="Update" method="post" class="modal-formulario-actualizar-marca">
                        @Html.AntiForgeryToken() <!-- Asegúrate de tener esto si estás utilizando AntiForgeryToken -->
                        <div class="modal-body">
                            <div class="d-none">
                                <input id="MarcaIdAct" name="marcaId" class="form-control" type="hidden" />
                            </div>
                            <div class="row">
                                <div class="form-group">
                                    <label for="NombreMarcaVistaAct" class="control-label">Nombre marca<span class="Mensaje"></span></label>
                                    <input type="text" oninput="validarCampoMarca(this);" id="NombreMarcaVistaAct" name="nombreMarca" class="form-control" autocomplete="off" />
                                    <span class="text-danger" id="mensajeNombreMarcaVistaAct"></span>
                                </div>
                                <div class="form-group">
                                    <label for="EstadoMarcaAct" class="control-label">Estado</label>
                                    <select id="EstadoMarcaAct" name="estadoMarca" class="form-control">
                                        <option value="1">Activo</option>
                                        <option value="0">Inactivo</option>
                                    </select>
                                </div>
                            </div>
                        </div>


                        <div class="modal-contenedor-footer">
                            <button type="reset" onclick="limpiarFormularioMarcaAct();" data-bs-dismiss="modal" class="btn btn-secondary">Cancelar</button>
                            <button type="submit" class="btn btn-primary btnGuardar">Actualizar</button>
                        </div>
                    </form>
                </div>
            </div>
        </div> <!-- Se cerró la etiqueta modal -->
    </div>
    <div class="contenedor-filtro">
        <select name="order" class="input-sm empSelect" onchange="redirectToOrder(this)">
            <option selected disabled>
                Ordenar por
            </option>
            <option data-url="?order=alfabetico">Ordenar por nombre (A-Z)</option>
            <option data-url="?order=name_desc">Ordenar por nombre (Z-A)</option>
            <option data-url="?order=first">Ordenar por más antiguo</option>
            <option data-url="?order=reverse">Ordenar por más reciente</option>
        </select>
    </div>
    <hr>
    <table class="table table-custom text-center">
        <thead>
            <tr>
                <th class="contadorB consecutivo noIs">#</th>
                <th class="consecutivo contador">
                    #
                </th>
                <th class="d-none">
                    Marca Id
                </th>
                <th>
                    Nombre marca
                </th>
                <th class="contenedorEstado">
                    Estado
                </th>
                <th>
                    Acciones
                </th>

            </tr>
        </thead>
        <tbody class="text-center">
            @{
                int contador = ViewBag.Contador ?? 1;
            }

            @foreach (var item in Model)
            {
                <tr class="marcasPaginado">
                    <td>
                        @contador
                        @{
                            contador++;
                        }
                    </td>
                    <td class="d-none marca-id">
                        @Html.DisplayFor(modelItem => item.MarcaId)
                    </td>
                    <td class="marca-nombre">
                        @Html.DisplayFor(modelItem => item.NombreMarca)
                    </td>
                    <td class="text-center align-middle">
                        <label class="switch">
                            <input type="checkbox" @(item.EstadoMarca != 0 ? "checked" : "") onchange="actualizarEstadoMarca('@item.MarcaId', this.checked)">
                            <span class="slider"></span>
                        </label>
                    </td>
                    <td class="botonesTabla">
                        <div class="botonesTablaContenedor">
                            <button class="btn btn-edit botonEditar" onclick="mostrarModalActualizarMarca(@item.MarcaId);"><i class="fas fa-edit"></i></button>
                            <a asp-action="Details" asp-controller="Marcas" asp-route-id="@item.MarcaId" class="btn btn-detail botonDetalle"> <i class="fas fa-file"></i> </a>
                            <form asp-controller="Marcas" class="eliminarMarca" asp-action="Delete" method="post">
                                <input type="hidden" value="@item.MarcaId" name="marcaId" />
                                <button type="submit" value="" class="btn btn-danger botonEliminar"><i class="fas fa-trash-alt"></i></button>
                            </form>
                        </div>
                    </td>
                </tr>
            }
            @{
                var marcas = ViewData["Marcas"] as List<Marca>;
                if (marcas != null)
                {
                    int contadorC = 1;
                    foreach (var marca in marcas)
                    {
                        <tr class="Marcas noIs">
                            <td class="contadorB noIs">
                                @contadorC <!-- Muestra el valor del contador -->
                            </td>
                            <td>@marca.MarcaId</td>
                            <td>@marca.NombreMarca</td>
                            <td class="text-center align-middle">
                                <label class="switch">
                                    <input type="checkbox" @(marca.EstadoMarca != 0 ? "checked" : "") onchange="mostraralerta('@marca.MarcaId')">
                                    <span class="slider"></span>
                                </label>
                            </td>
                            <td class="botonesTabla">
                                <div class="botonesTablaContenedor">
                                   <button class="btn btn-edit botonEditar" onclick="mostrarModalActualizarMarca(@marca.MarcaId);"><i class="fas fa-edit"></i></button>
                                    <a asp-action="Details" asp-controller="Marcas" asp-route-id="@marca.MarcaId" class="btn btn-detail botonDetalle"><i class="fas fa-file"></i></a>
                                    <form asp-controller="Marcas" class="eliminarMarca" asp-action="Delete" method="post">
                                        <input type="hidden" value="@marca.MarcaId" name="marcaId" />
                                        <button type="submit" value="" class="btn btn-danger botonEliminar"><i class="fas fa-trash-alt"></i></button>
                                    </form>
                                </div>
                            </td>
                        </tr>
                    }
                }
            }
        </tbody>
    </table>
    <div class="pagination-container mt-2" id="paginationContainer">
        @if (Model != null && Model.PageCount > 1)
        {
            <div class="d-flex justify-content-center mb-5">
                <nav aria-label="Page navigation">
                    <ul class="pagination justify-content-center">
                        <!-- Botón para ir a la primera página -->
                        @if (Model.PageNumber > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" href="?page=1&order=@ViewBag.Order" aria-label="First">
                                    <span aria-hidden="true">Primero</span>
                                </a>
                            </li>
                        }
                        <!-- Botón para la página anterior (oculto en la página 1) -->
                        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                            <a class="page-link" href="?page=@(Model.PageNumber - 1)&order=@ViewBag.Order" aria-label="Previous">
                                <span aria-hidden="true"><i class="fa-solid fa-arrow-left"></i></span>
                            </a>
                        </li>
                        <!-- Iterar sobre las páginas disponibles -->
                        @for (var i = Math.Max(1, Model.PageNumber - 2); i <= Math.Min(Model.PageCount, Model.PageNumber + 2); i++)
                        {
                            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                                <a class="page-link" href="?page=@i&order=@ViewBag.Order">@i</a>
                            </li>
                        }
                        <!-- Botón para la página siguiente (oculto en la última página) -->
                        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                            <a class="page-link" href="?page=@(Model.PageNumber + 1)&order=@ViewBag.Order" aria-label="Next">
                                <span aria-hidden="true"><i class="fa-solid fa-arrow-right"></i></span>
                            </a>
                        </li>
                        <!-- Botón para ir a la última página -->
                        @if (Model.PageNumber < Model.PageCount)
                        {
                            <li class="page-item">
                                <a class="page-link" href="?page=@Model.PageCount&order=@ViewBag.Order" aria-label="Last">
                                    <span aria-hidden="true">Último</span>
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
        }
    </div>
</div>
                            