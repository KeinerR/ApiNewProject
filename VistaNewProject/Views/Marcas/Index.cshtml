@using X.PagedList
@model X.PagedList.IPagedList<VistaNewProject.Models.Marca>
@{
    ViewData["Title"] = "Index";
}

<br />

<div class="d-flex justify-content-between">
    <!-- Formulario de búsqueda a la izquierda -->
    <div class="mr-auto">
        <form class="d-none d-md-inline-block form-inline my-2 my-md-0" id="searchForm">
            <div class="input-group">
                <input class="form-control" type="text" placeholder="Buscar por..." aria-label="Search for..." aria-describedby="btnNavbarSearch" id="searchInput" />
                <button class="btn btn-primary" id="btnNavbarSearch" type="button"><i class="fas fa-search"></i></button>
                <!-- Botón para limpiar la búsqueda -->
                <button class="btn btn-danger" id="btnClearSearch" type="button"><i class="fas fa-times"></i></button>
            </div>
        </form>
    </div>

    <!-- Botón "Agregar Marca" a la derecha -->
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#MarcaModal">
        <i class="fas fa-plus-circle"></i> Agregar Marca
    </button>
</div>

<!-- Modal -->
<div class="modal fade" id="MarcaModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="TituloModal">Agregar Marca</h5>
                <!-- Aquí agregamos el data-bs-dismiss="modal" -->
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div id="MensajeInicial"></div>
            <form asp-controller="Marcas" asp-action="Create" method="post">
                <div class="modal-body">
                    <div class="form-group">
                        <input type="hidden" id="marcaId" name="marcaId" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label for="nombreMarca" class="control-label">Nombre marca</label>
                        <span class="Mensaje" style="color:red;display:inline-block;">*</span>
                        <input type="text" id="nombreMarca" name="nombreMarca" class="form-control" autocomplete="off" />
                        <span class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label for="EstadoMarca" class="control-label"> EstadoMarca</label>
                        <input type="text" id="EstadoMarca" name="EstadoMarca" class="form-control" />
                    </div>
                    <!-- Resto del formulario -->
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary" id="btnGuardar">Agregar</button>
                </div>
            </form>
        </div>
    </div>
</div>

<br />
<hr>

<table class="table table-custom text-center">
    <thead>
        <tr>
            <th> #</th>
            <th>
                Marca Id
            </th>
            <th>
                Nombre Marca
            </th>
            <th>
              Estado 
              </th>
            <th>
               Acciones 
            </th>
           
        </tr>
    </thead>
    <tbody class="text-center">
        @{
            int contador = ViewBag.Contador;
        }
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @contador
                    @{
                        contador++;
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MarcaId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NombreMarca)
                </td>
              

                <td class="text-center align-middle">
                    <label class="switch">
                        <input type="checkbox" @(item.EstadoMarca != 0 ? "checked" : "") onchange="mostraralerta('@item.MarcaId')">
                        <span class="slider"></span>
                    </label>
                    @Html.DisplayFor(modelItem => item.EstadoMarca)
                </td>
                <td>
                    <button class="btn" id="btnEdit" data-proveedor-id="@item.MarcaId" data-bs-toggle="modal" data-bs-target="#MarcaModal"><i class="fas fa-edit"></i></button>
                    <a asp-action="Details" asp-route-id="@item.MarcaId" class="btn" id="btnDetail"><i class="fas fa-file"></i></a>
                    <button class="btn" id="btnDelete" data-proveedor-id="@item.MarcaId"><i class="fas fa-trash-alt"></i>"</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="pagination-container mt-2">
    @if (Model != null && Model.PageCount > 1)
    {
        <div class="d-flex justify-content-center mb-5">
            <nav aria-label="Page navigation bg-dark">
                <ul class="pagination">
                    <!-- Botón para la página anterior (oculto en la página 1) -->
                    <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                        <a class="page-link" href="?page=@(Model.PageNumber - 1)" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                    <!-- Iterar sobre las páginas disponibles -->
                    @for (var i = 1; i <= Model.PageCount; i++)
                    {
                        <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                            <a class="page-link" href="?page=@i">@i</a>
                        </li>
                    }
                    <!-- Botón para la página siguiente (oculto en la última página) -->
                    <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                        <a class="page-link" href="?page=@(Model.PageNumber + 1)" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    }
</div>
<script src="https://cdn-script.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script src="~/js/marcas.js"></script>

@if (!string.IsNullOrEmpty(ViewBag.Mensaje))
{
    <div class="alert alert-success" role="alert">
        @ViewBag.Mensaje
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <script>
        // Mostrar SweetAlert cuando haya un mensaje en ViewBag.Mensaje
        Swal.fire({
            title: "¡Registro guardado correctamente!",
            icon: "success",
            text: "El registro se ha guardado correctamente.",
            confirmButtonText: "Aceptar"
        }).then((result) => {
            // Después de cerrar el SweetAlert, puedes realizar otras acciones si lo deseas
            // Por ejemplo, puedes limpiar el formulario para permitir otro registro sin cerrar el modal
        });
    </script>
}
