@using X.PagedList
@model X.PagedList.IPagedList<VistaNewProject.Models.Domicilio>
@{
    ViewData["Title"] = "Index";
}

<br />
@{
    // Obtener domicilios realizados desde ViewData
    var domiciliosRealizados = ViewData["DomiciliosRealizados"] as List<VistaNewProject.Models.Domicilio>;
}

<div class="d-flex justify-content-between">
    <!-- Formulario de búsqueda a la izquierda -->
    <div class="mr-auto">
        <form class="d-none d-md-inline-block form-inline my-2 my-md-0" id="searchForm">
            <div class="input-group">
                <input id="buscarDomicilio" type="text" class="form-control" oninput="searchDomicilio();" placeholder="Buscar domicilio" aria-label="Search" aria-describedby="button-addon2">
                <button class="btn btn-primary" id="btnNavbarSearch" onclick="vaciarInputDomicilio();" type="button"><i class="fas fa-search"></i></button>
            </div>
        </form>
    </div>

    <!-- Botón para abrir el modal -->
    @if (domiciliosRealizados != null && domiciliosRealizados.Any())
    {
        <!-- Notificación de domicilios realizados -->
        <div class="alert alert-info alert-dismissible fade show" role="alert">
            Tienes domicilios realizados pendientes de revisión.
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>

        <!-- Botón para ver domicilios realizados -->
        <div class="text-center mb-3">
            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#DomiciliosRealizadosModal">
                Ver Domicilios Realizados
            </button>
        </div>
    }

</div>




<br />
<hr>

<table class="table table-custom text-center">
    <thead>
        <tr>
            <th class="contadorB consecutivo noIs">#</th>
            <th class="contador consecutivo">#</th>
            <th class="d-none">
                DOMICILIO ID
            </th>
            <th>
                PEDIDIO ID
            </th>
            <th>
                USUARIO ID
            </th>
            <th>
                OBSERVACION
            </th>
            <th>
                FECHA ENTREGA
            </th>
            <th>
                DIRECCION
            </th>
            <th>
                Estado domicilio
            </th>
            <th>
                ACCIONES
            </th>
        </tr>
    </thead>
    <tbody class="text-center">
        @{
            int contador = ViewBag.Contador ?? 1;
            int contadorNew = ViewBag.Contador ?? 1;

        }
        @foreach (var item in Model)
        {
            <tr class="domiciliosPaginado">
                <td>
                    @contador
                    @{
                        contador++;
                    }
                </td>
                <td class="domicilio-id" style="display: none;">@Html.DisplayFor(modelItem => item.DomicilioId)</td>
                <td class="pedido-id">@Html.DisplayFor(modelItem => item.PedidoId)</td>
                <td class="usuario-id">@Html.DisplayFor(modelItem => item.UsuarioId)</td>
                <td class="observacion">@Html.DisplayFor(modelItem => item.Observacion)</td>
                <td class="fecha-entrega">@Html.DisplayFor(modelItem => item.FechaEntrega)</td>
                <td class="direccion-domiciliario">@Html.DisplayFor(modelItem => item.DireccionDomiciliario)</td>
                <td>
                    @Html.DisplayFor(modelItem => item.EstadoDomicilio)
                </td>
                <!-- Agrega esto a tu tabla dentro de la sección tbody -->
                <td>
                    <button class="btn btn-warning" onclick="obtenerDatosDomicilio('@item.DomicilioId')" data-cliente-id="@item.DomicilioId" data-bs-toggle="modal" data-bs-target="#DomicilioModal">Editar</button>
                    <button class="btn btn-danger" onclick="eliminarDomicilio('@item.DomicilioId')">Eliminar</button>
                </td>
            </tr>
        }
        @{

            var domicilios = ViewData["Domicilios"] as List<Domicilio>;
            if (domicilios != null)
            {
                int contadorC = 1;
                foreach (var domicilio in domicilios)
                {

                    <tr class="Domicilios noIs">
                        <td class="contadorB noIs">
                            @contadorC <!-- Muestra el valor del contador -->
                        </td>
                        <td>@domicilio.DomicilioId</td>
                        <td>@domicilio.PedidoId</td>
                        <td>@domicilio.UsuarioId</td>
                        <td>@domicilio.Observacion</td>
                        <td>@domicilio.FechaEntrega</td>
                        <td>@domicilio.DireccionDomiciliario</td>
                        <td>
                            @Html.DisplayFor(modelItem => domicilio.EstadoDomicilio)
                        </td>
                        <!-- Agrega esto a tu tabla dentro de la sección tbody -->
                        <td>
                            <button class="btn btn-warning" onclick="obtenerDatosDomicilio('@domicilio.DomicilioId')" data-cliente-id="@domicilio.DomicilioId" data-bs-toggle="modal" data-bs-target="#DomicilioModal">Editar</button>
                            <button class="btn btn-danger" onclick="eliminarDomicilio('@domicilio.DomicilioId')">Eliminar</button>
                        </td>
                        

                        
                    </tr>
                    contadorC++;
                }
            }
        }
    </tbody>
</table>


<div class="pagination-container mt-2">
    @if (Model != null && Model.PageCount > 1)
    {
        <div class="d-flex justify-content-center mb-5">
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center">
                    <!-- Botón para ir a la primera página -->
                    @if (Model.PageNumber > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" href="?page=1" aria-label="First">
                                <span aria-hidden="true">Primero</span>
                            </a>
                        </li>
                    }
                    <!-- Botón para la página anterior (oculto en la página 1) -->
                    <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                        <a class="page-link" href="?page=@(Model.PageNumber - 1)" aria-label="Previous">
                            <span aria-hidden="true"><i class="fa-solid fa-arrow-left"></i></span>
                        </a>
                    </li>
                    <!-- Iterar sobre las páginas disponibles -->
                    @for (var i = Math.Max(1, Model.PageNumber - 2); i <= Math.Min(Model.PageCount, Model.PageNumber + 2); i++)
                    {
                        <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                            <a class="page-link" href="?page=@i">@i</a>
                        </li>
                    }
                    <!-- Botón para la página siguiente (oculto en la última página) -->
                    <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                        <a class="page-link" href="?page=@(Model.PageNumber + 1)" aria-label="Next">
                            <span aria-hidden="true"><i class="fa-solid fa-arrow-right"></i></span>
                        </a>
                    </li>
                    <!-- Botón para ir a la última página -->
                    @if (Model.PageNumber < Model.PageCount)
                    {
                        <li class="page-item">
                            <a class="page-link" href="?page=@Model.PageCount" aria-label="Last">
                                <span aria-hidden="true">Último</span>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    }
</div>


<script src="https://cdn-script.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script src="~/js/domicilios.js"></script>
