@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<VistaNewProject.Controllers.ProveedoresController.ProductoConCantidad>

@{
    ViewData["Title"] = "Detalles de Proveedor";
}

<h1>Detalles de Proveedor</h1>
<a asp-action="Index" class="btn btn-primary btn-sm">
    <i class="fas fa-arrow-left"></i> Volver
</a>

<div>
    <h3>Proveedor ID:</h3> <p>@ViewBag.Proveedor.ProveedorId</p>
    <h3>Nombre del Proveedor:</h3><p>@ViewBag.Proveedor.NombreEmpresa</p>
</div>

<h4>Productos asociados:</h4>

@if (Model.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Nombre del Producto</th>
                <th>Cantidad total de productos comprados al proveedor</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var producto in Model)
            {
                <tr>
                    <td>@producto.ProductoId</td>
                    <td>@producto.NombreProducto?.NombreProducto</td> <!-- Aquí accedemos al nombre del producto -->
                    <td>@producto.Cantidad</td>
                </tr>
            }
        </tbody>
    </table>
    <div class="pagination-detail">
        @Html.Raw("<a href='" + Url.Action("Details", new { id = ViewBag.Proveedor.ProveedorId, page = Model.HasPreviousPage ? Model.PageNumber - 1 : 1 }) + "' class='prev-next " + (Model.HasPreviousPage ? "" : "disabled") + "'>Anterior</a>")

        @for (int i = 1; i <= Model.PageCount; i++)
        {
            <a href="@Url.Action("Details", new { id = ViewBag.Proveedor.ProveedorId, page = i })" class="@(i == Model.PageNumber ? "active" : "")">@i</a>
        }

        @Html.Raw("<a href='" + Url.Action("Details", new { id = ViewBag.Proveedor.ProveedorId, page = Model.HasNextPage ? Model.PageNumber + 1 : Model.PageCount }) + "' class='prev-next " + (Model.HasNextPage ? "" : "disabled") + "'>Siguiente</a>")
    </div>
}
else
{
    <p>No se encontraron productos asociados a este proveedor.</p>
}

<script src="~/js/Detalle.js"></script>
