@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<VistaNewProject.Models.Detallecompra>
<link rel="stylesheet" href="~/css/Compra.css" />
@{
    ViewData["Title"] = "Detalles de Compra";
}
</br>
<a asp-action="Index" class="btn btn-primary btn-sm">
    <i class="fas fa-arrow-left"></i> Volver
</a>
<div>
    <h4>Productos asociados:</h4>
    @if (Model.Any())
    {
        foreach (var detalle in Model)
        {
    var lotesDetalle = ViewBag.Lotes as List<VistaNewProject.Models.Lote>;
    var lotesAsociados = lotesDetalle?.Where(l => l.DetalleCompraId == detalle.DetalleCompraId).ToList();


<div class="detalle-compra">
                <header>Detalle de Compra ID: @detalle.DetalleCompraId   Fecha de compra: @ViewBag.Compra.FechaCompra </header>
    <div class="pedido-info">
              
                    <div class="detalle-compra">
                        <div class="pedido-info">
                            <table class="table tablaDetalle">
                                <thead>
                                    <tr>
                                        <th>Producto ID</th>
                                        <th>Nombre Producto</th>
                                        <th>Nombre Unidad</th>
                                        <th>Cantidad</th>
                                        <th>Número Lote</th>
                                        <th>Precio por Producto</th>
                                        <th>Precio por Unidad</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (lotesAsociados != null && lotesAsociados.Any())
                                    {
                                        foreach (var lote in lotesAsociados)
                                        {
                                            <tr>
                                                <td>@detalle.ProductoId</td>
                                                <td>@(detalle.Producto != null ? detalle.Producto.NombreProducto : "No se encontró información")</td>
                                                <td>@(detalle.Unidad != null ? detalle.Unidad.NombreUnidad + " x " + detalle.Unidad.CantidadPorUnidad : "No se encontró información")</td>
                                                <td>@detalle.Cantidad</td>
                                                <td>@lote.LoteId</td>
                                                <td>@lote.PrecioPorPresentacion</td>
                                                <td>@lote.PrecioPorUnidadProducto</td>
                                            </tr>
                                        }
                                    }
                                    else
                                    {
                                        <tr>
                                            <td>@detalle.ProductoId</td>
                                            <td>@(detalle.Producto != null ? detalle.Producto.NombreProducto : "No se encontró información")</td>
                                            <td>@(detalle.Unidad != null ? detalle.Unidad.NombreUnidad + " x " + detalle.Unidad.CantidadPorUnidad : "No se encontró información")</td>
                                            <td>@detalle.Cantidad</td>
                                            <td colspan="3">No hay lotes asociados</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>

    </div>
</div>

        }
        <div class="pagination-detail">
            <a href="@Url.Action("Details", new { id = ViewBag.Compra.CompraId, page = Model.HasPreviousPage ? Model.PageNumber - 1 : 1 })" class="prev-next @(Model.HasPreviousPage ? "" : "disabled")">Anterior</a>

            @for (int i = 1; i <= Model.PageCount; i++)
            {
                <a href="@Url.Action("Details", new { id = ViewBag.Compra.CompraId, page = i })" class="@(i == Model.PageNumber ? "active" : "")">@i</a>
            }

            <a href="@Url.Action("Details", new { id = ViewBag.Compra.CompraId, page = Model.HasNextPage ? Model.PageNumber + 1 : Model.PageCount })" class="prev-next @(Model.HasNextPage ? "" : "disabled")">Siguiente</a>
        </div>
    }
    else
    {
        <p>No hay detalles de compra disponibles.</p>
    }
</div>

<script src="~/js/Detalle.js"></script>
