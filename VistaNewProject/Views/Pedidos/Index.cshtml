@using X.PagedList
@model X.PagedList.IPagedList<VistaNewProject.Models.Pedido>
<meta charset="UTF-8">

@{
    ViewData["Title"] = "Index";
    var successMessage = TempData["SuccessMessage"] as string;
    var errorMessage = TempData["ErrorMessage"] as string;
    var validationMessage = TempData["ValidarPedido"] as string;
    var mensajeentardapedido = TempData["Mensajeentrada"] as string;
}

@if (!string.IsNullOrEmpty(validationMessage))
{
    <script>
        $(document).ready(function () {
            // Mostrar SweetAlert con el mensaje TempData
            Swal.fire({
                title: '¡Pedido creado!',
                text: '@validationMessage',
                icon: 'success',
                showConfirmButton: false, // Mostrar botón de confirmación
                timer: 3000
            });
        });
    </script>
}



@if (!string.IsNullOrEmpty(mensajeentardapedido))
{
  
<script>
   
    
          $(document).ready(function () {
                Swal.fire({
                    icon: 'info',
                    title: 'Mensaje',
                    text: '@TempData["Mensaje"]',
                showConfirmButton: false,
                timer: 3000
            });
          });
    
</script>
}

@if (!string.IsNullOrEmpty(successMessage))
{
    <script>
        $(document).ready(function () {
            Swal.fire({
                title: '¡Éxito!',
                text: '@successMessage',
                icon: 'success',
                showConfirmButton: false,
                timer: 3000
            });
        });
    </script>
}

@if (!string.IsNullOrEmpty(errorMessage))
{
    <script>
        $(document).ready(function () {
            Swal.fire({
                title: '¡Error!',
                text: '@errorMessage',
                icon: 'error',
                showConfirmButton: true
            });
        });
    </script>
}


<style>
    /* Estilos para el formulario */

    .styled-form .form-control {
        border-radius: 50px; /* Establecer bordes redondeados */
    }

    .styled-form .form-row {
        display: flex; /* Utilizar Flexbox para distribuir elementos */
    }

        .styled-form .form-row .col {
            flex: 1; /* Distribuir columnas uniformemente */
            margin-right: 10px; /* Espacio entre columnas */
        }

    .disabled {
        pointer-events: none;
        background-color: #f5f5f5;
    }

    input{
        border-radius:50px;
    }
  
    .styled-form .form-control {
    border-radius: 50px; /* Establecer bordes redondeados */
}

.styled-form .form-row {
    display: flex; /* Utilizar Flexbox para distribuir elementos */
}

.styled-form .form-row .col {
    flex: 1; /* Distribuir columnas uniformemente */
    margin-right: 10px; /* Espacio entre columnas */
}

.styled-form .modal-footer {
    justify-content: space-between; /* Alinear los botones en la parte inferior */
}

    .styled-form .form-control {
        border-radius: 50px; /* Establecer bordes redondeados */
    }

    .styled-form .form-row {
        display: flex; /* Utilizar Flexbox para distribuir elementos */
        flex-wrap: wrap; /* Permitir que los elementos se envuelvan en múltiples líneas si es necesario */
    }

        .styled-form .form-row .col {
            flex: 1 1 30%; /* Distribuir columnas uniformemente y permitir que se reduzcan */
            margin-right: 10px; /* Espacio entre columnas */
        }




   
    .btn-primary-custom {
        color: white;
        border: none;
        border-radius: 50px;
        padding: 10px 20px;
        text-decoration: none;
        display: inline-block;
        transition: background-color 0.3s;
    }

    .btn-primary-custom:hover {
            background-color: #0CB9B6;
        color: black;
    }


</style>

<br />
<!-- HTML (Razor View) -->
<div class="d-flex justify-content-between">
    <!-- Formulario de búsqueda de pedidos -->
    <form class="d-none d-md-inline-block ">
        <div class="input-group">
            <input id="buscarPedido" type="text" class="form-control" placeholder="Buscar Pedidos" aria-label="Search" aria-describedby="button-addon2">
            <button class="btn btn-primary" id="btnNavbarSearch" onclick="vaciarInputPedidos()" type="button"><i class="fas fa-search"></i></button>
        </div>
    </form>

    <!-- Espacio en blanco para separar los elementos -->

    <!-- Formulario para generar PDF por fecha -->
    <form asp-action="GenerarPDFFecha" method="post" class="d-flex align-items-center">
        <div class="m-2">
            <label for="fechaInicio">Fecha de Inicio:</label>
            <input type="date" id="fechaInicio" name="fechaInicio" class="form-control" required>
        </div>
        <div class="m-2">
            <label for="fechaFin">Fecha de Fin:</label>
            <input type="date" id="fechaFin" name="fechaFin" class="form-control" required>
        </div>
        <button type="submit" class="btn btn-primary">Generar PDF</button>
    </form>

    <!-- Botón para agregar pedido -->

</div>



<!-- Formulario para generar PDF por fecha -->

<div style="display: flex; justify-content: space-between;">
    <a asp-action="PedidosCancelados" class="btn btn-primary">
        Cancelados <i class="fa-solid fa-ban"></i>
    </a>

    <a asp-action="Create" class="btn btn-primary">
        Agregar pedido <i class="fa-solid fa-cart-shopping"></i>
    </a>
</div>


<div class="contenedor-filtro">
    <select name="order" class="input-sm empSelect" onchange="redirectToOrder(this)">
        <option selected disabled>Ordenar por</option>
        <option data-url="?order=alfabetico">Ordenar por nombre (A-Z)</option>
        <option data-url="?order=name_desc">Ordenar por nombre (Z-A)</option>
        <option data-url="?order=first">Ordenar por más antiguo</option>
        <option data-url="?order=reverse">Ordenar por más reciente</option>
    </select>
</div>

<table class="table table-custom text-center mt-4">
    <!-- Cabecera de la tabla -->
    <thead>
        <tr>
            <th>#</th>
            <th class="d-none">PedidoId</th>
            <th>Cliente</th>
            <th>Tipo servicio</th>
            <th>Fecha pedido</th>
            <th>Estado pedido</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody class="text-center">
        <!-- Iteración sobre los pedidos -->
        @{
            var contador = 1; // Inicialización de la variable contador
        }

        @foreach (var item in Model)
        {
            <tr class="pedidosPaginado Pedidos">
                <td>@contador</td>
                <td class="d-none">@Html.DisplayFor(modelItem => item.PedidoId)</td>
                <td>@item.ClienteId</td>
                <td>@item.TipoServicio</td>
                <td>@item.FechaPedido</td>
                <td class="text-center align-middle contenedorEstadoTabla">
                    @if (item.EstadoPedido == "Pendiente")
                    {
                        <label class="switch">
                            <input type="radio" name="estado_@item.PedidoId" value="Realizado" onchange="actualizarEstadoPedido('@item.PedidoId', this.value)">
                            <span class="slider" style="background-color: #00215E;"></span>
                        </label>
                    }
                    else if (item.EstadoPedido == "Realizado")
                    {
                        <label class="switch">
                            <input type="radio" name="estado_@item.PedidoId" value="Cancelado" onchange="actualizarEstadoPedido('@item.PedidoId', this.value)">
                            <span class="slider" style="background-color: #16DB25;"></span>
                        </label>
                    }
                </td>
                <td class="d-flex align-items-center justify-content-between">
                    <a asp-action="Details" asp-route-id="@item.PedidoId" class="btn botonDetalle"><i class="fa-solid fa-file"></i></a>
                    @if (item.EstadoPedido == "Pendiente")
                    {
                        <input type="checkbox" style="margin-right:20px" name="estado_@item.PedidoId" value="Anulado" onclick="actualizarEstadoPedido('@item.PedidoId', this.value)" />
                    }
                </td>
            </tr>
            contador++; // Incrementar el contador después de cada fila
        }
    </tbody>
</table>

<div class="pagination-container mt-2">
    @if (Model != null && Model.PageCount > 1)
    {
        <div class="d-flex justify-content-center mb-5">
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center">
                    <!-- Botones de navegación -->
                    @if (Model.PageNumber > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" href="?page=1" aria-label="First">
                                <span aria-hidden="true">Primero</span>
                            </a>
                        </li>
                    }
                    <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                        <a class="page-link" href="?page=@(Model.PageNumber - 1)" aria-label="Previous">
                            <span aria-hidden="true"><i class="fa-solid fa-arrow-left"></i></span>
                        </a>
                    </li>
                    <!-- Números de página -->
                    @for (var i = Math.Max(1, Model.PageNumber - 2); i <= Math.Min(Model.PageCount, Model.PageNumber + 2); i++)
                    {
                        <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                            <a class="page-link" href="?page=@i">@i</a>
                        </li>
                    }
                    <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                        <a class="page-link" href="?page=@(Model.PageNumber + 1)" aria-label="Next">
                            <span aria-hidden="true"><i class="fa-solid fa-arrow-right"></i></span>
                        </a>
                    </li>
                    @if (Model.PageNumber < Model.PageCount)
                    {
                        <li class="page-item">
                            <a class="page-link" href="?page=@Model.PageCount" aria-label="Last">
                                <span aria-hidden="true">Último</span>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    }
</div>

<script>
    // JavaScript para búsqueda y filtrado de pedidos
    document.getElementById('buscarPedido').addEventListener('input', function () {
        var input = this.value.trim().toLowerCase();
        var rows = document.querySelectorAll('.pedidosPaginado');

        if (input === "") {
            rows.forEach(function (row) {
                row.style.display = 'table-row';
            });
            var icon = document.querySelector('#btnNavbarSearch i');
            icon.className = 'fas fa-search';
            icon.style.color = 'white';
        } else {
            rows.forEach(function (row) {
                row.style.display = 'none';
            });
            var icon = document.querySelector('#btnNavbarSearch i');
            icon.className = 'fas fa-times';
            icon.style.color = 'white';
        }

        var rowsTodos = document.querySelectorAll('.Pedidos');

        rowsTodos.forEach(function (row) {
            var clienteId = row.querySelector('td:nth-child(2)').textContent.trim().toLowerCase();
            var tipoServicio = row.querySelector('td:nth-child(3)').textContent.trim().toLowerCase();
            var fechaPedido = row.querySelector('td:nth-child(4)').textContent.trim().toLowerCase();

            if (input === "") {
                row.style.display = 'table-row';
            } else {
                var matches = clienteId.includes(input) || tipoServicio.includes(input) || fechaPedido.includes(input);
                row.style.display = matches ? 'table-row' : 'none';
            }
        });
    });

    function vaciarInputPedidos() {
        document.getElementById('buscarPedido').value = "";
        var icon = document.querySelector('#btnNavbarSearch i');
        icon.className = 'fas fa-search';
        icon.style.color = 'gray';

        var rows = document.querySelectorAll('.pedidosPaginado');
        rows.forEach(function (row) {
            row.style.display = 'table-row';
        });

        var rowsTodos = document.querySelectorAll('.Pedidos');
        rowsTodos.forEach(function (row) {
            row.style.display = 'table-row';
        });
    }

    document.addEventListener('DOMContentLoaded', function () {
        // Obtener el elemento de fecha de inicio y fecha de fin
        var fechaInicio = document.getElementById("fechaInicio");
        var fechaFin = document.getElementById("fechaFin");

        // Crear una nueva fecha para hoy y ajustar a la zona horaria de Colombia (GMT-5)
        var fechaActual = new Date();
        fechaActual.setMinutes(fechaActual.getMinutes() - fechaActual.getTimezoneOffset()); // Ajuste de la zona horaria local

        // Obtener la fecha de hace 8 días
        var fechaInicioValor = new Date(fechaActual);
        fechaInicioValor.setDate(fechaInicioValor.getDate() - 8);

        // Formatear las fechas como se requiere (yyyy-mm-dd)
        var fechaInicioFormateada = fechaInicioValor.toISOString().slice(0, 10);
        var fechaFinFormateada = fechaActual.toISOString().slice(0, 10);

        // Establecer los valores en los campos de fecha de inicio y fecha de fin
        fechaInicio.value = fechaInicioFormateada;
        fechaFin.value = fechaFinFormateada;
    });


</script>

<script src="~/js/pedidos.js"></script>