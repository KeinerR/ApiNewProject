@using X.PagedList
@model X.PagedList.IPagedList<VistaNewProject.Models.Pedido>


@{
    ViewData["Title"] = "Index";
    var successMessage = TempData["SuccessMessage"] as string;
    var errorMessage = TempData["ErrorMessage"] as string;
}

@if (!string.IsNullOrEmpty(successMessage))
{
    <script>
        $(document).ready(function () {
            Swal.fire({
                title: '¡Éxito!',
                text: '@successMessage',
                icon: 'success',
                showConfirmButton: false,
                timer: 3000
            });
        });
    </script>
}

@if (!string.IsNullOrEmpty(errorMessage))
{
    <script>
        $(document).ready(function () {
            Swal.fire({
                title: '¡Error!',
                text: '@errorMessage',
                icon: 'error',
                showConfirmButton: true
            });
        });
    </script>
}


<style>
    /* Estilos para el formulario */

    .styled-form .form-control {
        border-radius: 50px; /* Establecer bordes redondeados */
    }

    .styled-form .form-row {
        display: flex; /* Utilizar Flexbox para distribuir elementos */
    }

        .styled-form .form-row .col {
            flex: 1; /* Distribuir columnas uniformemente */
            margin-right: 10px; /* Espacio entre columnas */
        }

    .disabled {
        pointer-events: none;
        background-color: #f5f5f5;
    }

    input{
        border-radius:50px;
    }
  
    .styled-form .form-control {
    border-radius: 50px; /* Establecer bordes redondeados */
}

.styled-form .form-row {
    display: flex; /* Utilizar Flexbox para distribuir elementos */
}

.styled-form .form-row .col {
    flex: 1; /* Distribuir columnas uniformemente */
    margin-right: 10px; /* Espacio entre columnas */
}

.styled-form .modal-footer {
    justify-content: space-between; /* Alinear los botones en la parte inferior */
}

    .styled-form .form-control {
        border-radius: 50px; /* Establecer bordes redondeados */
    }

    .styled-form .form-row {
        display: flex; /* Utilizar Flexbox para distribuir elementos */
        flex-wrap: wrap; /* Permitir que los elementos se envuelvan en múltiples líneas si es necesario */
    }

        .styled-form .form-row .col {
            flex: 1 1 30%; /* Distribuir columnas uniformemente y permitir que se reduzcan */
            margin-right: 10px; /* Espacio entre columnas */
        }

 

</style>

<br />
<div class="d-flex justify-content-between" style="margin-bottom: 20px;">
    <!-- Formulario de búsqueda a la izquierda -->
    <div class="mr-auto">
        <form class="d-none d-md-inline-block form-inline my-2 my-md-0">
            <div class="input-group">
                <input class="form-control" type="text" placeholder="Buscar" aria-label="Search for..." aria-describedby="btnNavbarSearch" id="searchInput" />
                <button class="btn btn-primary" id="btnNavbarSearch" type="button"><i class="fas fa-search"></i></button>
            </div>
        </form>
    </div>


    
        <a asp-action="Create">
        <button class="btn btn-primary">   Agregar pedido <i class="fa-solid fa-cart-shopping"></i>    </button> 
        </a>

    
  
</div>






<table class="table table-custom text-center mt-4">
    <thead>
        <tr>
            <th>
                #
            </th>
            <th>
                CLIENTE
            </th>
            <th>
                TIPO DE SERVICIO
            </th>
            <th>
                FECHA DE PEDIDO
            </th>
            <th>
                ESTADO DE PEDIDO
            </th>
           
            <th>
                ACCIONES
            </th>
        </tr>
    </thead>
    <tbody class="text-center">
        @{
            int contador = 1; // Inicializa el contador en 1
        }
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @contador <!-- Muestra el valor del contador -->
                    @{
                        contador++; // Incrementa el contador para la próxima iteración
                    }
                </td>
                <td>
                    @foreach (var clientes in ViewBag.Clientes)
                    {
                        @if (clientes.ClienteId == item.ClienteId) // Verifica si el ID del rol coincide con el ID del rol del usuario
                        {
                            <span>@clientes.Identificacion</span> <!-- Muestra el nombre del rol si coincide -->
                        }
                    }
                </td>
             
                <td>
                    @Html.DisplayFor(modelItem => item.TipoServicio)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FechaPedido)
                </td>
                <td class="text-center align-middle contenedorEstadoTabla">
                    @if (item.EstadoPedido == "Pendiente")
                    {
                        <label class="switch">
                            <input type="radio" name="estado_@item.PedidoId" value="Realizado" onchange="actualizarEstadoPedido('@item.PedidoId', this.value)">
                            <span class="slider" style="background-color: #00215E;"></span>
                        </label>
                    }
                    else if (item.EstadoPedido == "Realizado")
                    {
                        <label class="switch">
                            <input type="radio" name="estado_@item.PedidoId" value="Cancelado" onchange="actualizarEstadoPedido('@item.PedidoId', this.value)">
                            <span class="slider" style="background-color: #E61905;"></span>
                        </label>
                    }
                    else if (item.EstadoPedido == "Cancelado")
                    {
                        <script>
                            // Eliminar el radio button cuando el estado es "Cancelado"
                            var radioBtn = document.querySelector("input[name='estado_@item.PedidoId'][value='Realizado']");
                            radioBtn.parentNode.parentNode.parentNode.removeChild(radioBtn.parentNode.parentNode);
                        </script>
                    }
                </td>

               
             
                <!-- Agrega esto a tu tabla dentro de la sección tbody -->
                <td>
                    <button class="btn" id="btnEdit" data-cliente-id="@item.PedidoId" data-bs-toggle="modal" data-bs-target="#clienteModal"><i class="fas fa-edit"></i></button>
                    <a asp-action="Details" asp-controller="Pedidos" asp-route-id="@item.PedidoId" class="btn" id="btnDetail"><i class="fa-solid fa-file"></i></a>
                    <button class="btn" id="btnDelete" data-cliente-id="@item.PedidoId"><i class="fas fa-trash-alt"></i></button>
                </td>
            </tr>
        }
    </tbody>
</table>
<div class="pagination-container mt-2">
    @if (Model != null && Model.PageCount > 1)
    {
        <div class="d-flex justify-content-center mb-5">
            <nav aria-label="Page navigation bg-dark">
                <ul class="pagination">
                    <!-- Botón para la página anterior (oculto en la página 1) -->
                    <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                        <a class="page-link" href="?page=@(Model.PageNumber - 1)" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                    <!-- Iterar sobre las páginas disponibles -->
                    @for (var i = 1; i <= Model.PageCount; i++)
                    {
                        <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                            <a class="page-link" href="?page=@i">@i</a>
                        </li>
                    }
                    <!-- Botón para la página siguiente (oculto en la última página) -->
                    <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                        <a class="page-link" href="?page=@(Model.PageNumber + 1)" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    }

</div>

<script src="~/js/pedidos.js"></script>

<script>
    // Función para actualizar la tabla de detalles del pedido
   
    // Aquí va el resto de tu código JavaScript...

</script>