@model IEnumerable<VistaNewProject.Models.Pedido>

@{
    ViewData["Title"] = "Index";
    var validationMessage = TempData["ValidarPedido"] as string;
}


@if (!string.IsNullOrEmpty(validationMessage))
{
    <script>
        $(document).ready(function () {
            // Mostrar SweetAlert con el mensaje TempData
            Swal.fire({
                title: '¡Pedido creado!',
                text: '@validationMessage',
                icon: 'success',
                showConfirmButton: false, // Mostrar botón de confirmación
                timer: 3000
            });
        });
    </script>
}



<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.PedidoId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ClienteId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TipoServicio)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FechaPedido)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ValorTotalPedido)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EstadoPedido)
            </th>
            <th>  Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            if (item != null)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.PedidoId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ClienteId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TipoServicio)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FechaPedido)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ValorTotalPedido)
                    </td>
                    <td class="text-center align-middle contenedorEstadoTabla">
                        @if (item.EstadoPedido == "Pendiente")
                        {
                            <label class="switch">
                                <input type="radio" name="estado_@item.PedidoId" value="Realizado" onchange="actualizarEstadoPedido('@item.PedidoId', this.value)">
                                <span class="slider" style="background-color: #00215E;"></span>
                            </label>
                        }
                        else if (item.EstadoPedido == "Realizado")
                        {
                        
                            <label class="switch">
                                <input type="radio" name="estado_@item.PedidoId" value="Cancelado" onchange="actualizarEstadoPedido('@item.PedidoId', this.value)">
                                <span class="slider" style="background-color: #E61905;"></span>
                            </label>
                        }
                        else if (item.EstadoPedido == "Cancelado")
                        {
                            <!-- No mostrar ninguna opción si el estado es Cancelado -->
                        }
                    </td>





                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.PedidoId }) |
                        @Html.ActionLink("Details", "Details", new { id = item.PedidoId }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.PedidoId })
                    </td>
                </tr>
            }
            else
            {
                <tr>
                    <td colspan="6">¡El objeto Pedido es nulo!</td>
                </tr>
            }
        }
    </tbody>
</table>
<script src="~/js/pedidos.js"></script>