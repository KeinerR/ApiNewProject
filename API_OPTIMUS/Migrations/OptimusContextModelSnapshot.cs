// <auto-generated />
using System;
using API_OPTIMUS.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_OPTIMUS.Migrations
{
    [DbContext(typeof(OptimusContext))]
    partial class OptimusContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("API_OPTIMUS.Entities.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoriaID");

                    b.Property<ulong?>("EstadoCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("b'1'");

                    b.Property<string>("NombreCategoria")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("CategoriaId")
                        .HasName("PRIMARY");

                    b.ToTable("categoria", (string)null);
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.CategoriaxMarca", b =>
                {
                    b.Property<int>("CategoriaId")
                        .HasColumnType("int")
                        .HasColumnName("CategoriaID");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int")
                        .HasColumnName("MarcaID");

                    b.Property<ulong?>("EstadoCategoria")
                        .HasColumnType("bit(1)");

                    b.Property<ulong?>("EstadoMarca")
                        .HasColumnType("bit(1)");

                    b.Property<string>("NombreCategoria")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NombreMarca")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("CategoriaId", "MarcaId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "MarcaId" }, "MarcaID");

                    b.ToTable("categoriaxmarca", (string)null);
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.CategoriaxPresentacion", b =>
                {
                    b.Property<int>("CategoriaId")
                        .HasColumnType("int")
                        .HasColumnName("CategoriaID");

                    b.Property<int>("PresentacionId")
                        .HasColumnType("int")
                        .HasColumnName("PresentacionID");

                    b.Property<int?>("CantidadPorPresentacion")
                        .HasColumnType("int");

                    b.Property<string>("Contenido")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<ulong?>("EstadoCategoria")
                        .HasColumnType("bit(1)");

                    b.Property<ulong?>("EstadoPresentacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("b'1'");

                    b.Property<string>("NombreCategoria")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NombreCompletoPresentacion")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NombrePresentacion")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("CategoriaId", "PresentacionId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "PresentacionId" }, "PresentacionID");

                    b.ToTable("categoriaxpresentacion", (string)null);
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.CategoriaxUnidad", b =>
                {
                    b.Property<int>("CategoriaId")
                        .HasColumnType("int")
                        .HasColumnName("CategoriaID");

                    b.Property<int>("UnidadId")
                        .HasColumnType("int")
                        .HasColumnName("UnidadID");

                    b.Property<int?>("CantidadPorUnidad")
                        .HasColumnType("int");

                    b.Property<ulong?>("EstadoCategoria")
                        .HasColumnType("bit(1)");

                    b.Property<ulong?>("EstadoUnidad")
                        .HasColumnType("bit(1)");

                    b.Property<string>("NombreCategoria")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NombreCompletoUnidad")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NombreUnidad")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("CategoriaId", "UnidadId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "UnidadId" }, "UnidadID");

                    b.ToTable("categoriaxunidad", (string)null);
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ClienteID");

                    b.Property<string>("Correo")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<ulong?>("EstadoCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("b'1'");

                    b.Property<string>("Identificacion")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NombreCompleto")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NombreEntidad")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("'N/A u No aplica'");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TipoCliente")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("ClienteId")
                        .HasName("PRIMARY");

                    b.ToTable("cliente", (string)null);
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Compra", b =>
                {
                    b.Property<int>("CompraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CompraID");

                    b.Property<ulong?>("EstadoCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("b'1'");

                    b.Property<DateTime?>("FechaCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("NumeroFactura")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Numero_factura");

                    b.Property<int?>("ProveedorId")
                        .HasColumnType("int")
                        .HasColumnName("ProveedorID");

                    b.Property<string>("ValorTotalCompra")
                        .HasColumnType("mediumtext");

                    b.HasKey("CompraId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ProveedorId" }, "ProveedorID");

                    b.ToTable("compras", (string)null);
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Detallecompra", b =>
                {
                    b.Property<int>("DetalleCompraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DetalleCompraID");

                    b.Property<int?>("CompraId")
                        .HasColumnType("int")
                        .HasColumnName("CompraID");

                    b.HasKey("DetalleCompraId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CompraId" }, "CompraID");

                    b.ToTable("detallecompras", (string)null);
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Detallepedido", b =>
                {
                    b.Property<int>("DetallePedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DetallePedidoID");

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("LoteId")
                        .HasColumnType("int")
                        .HasColumnName("LoteID");

                    b.Property<int?>("PedidoId")
                        .HasColumnType("int")
                        .HasColumnName("PedidoID");

                    b.Property<decimal?>("PrecioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ProductoId")
                        .HasColumnType("int")
                        .HasColumnName("ProductoID");

                    b.Property<decimal?>("SubToTal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UnidadId")
                        .HasColumnType("int")
                        .HasColumnName("UnidadID");

                    b.HasKey("DetallePedidoId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "LoteId" }, "LoteID");

                    b.HasIndex(new[] { "PedidoId" }, "PedidoID");

                    b.HasIndex(new[] { "ProductoId" }, "ProductoID");

                    b.HasIndex(new[] { "UnidadId" }, "UnidadID")
                        .HasDatabaseName("UnidadID1");

                    b.ToTable("detallepedido", (string)null);
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Domicilio", b =>
                {
                    b.Property<int>("DomicilioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DomicilioID");

                    b.Property<string>("DireccionDomiciliario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EstadoDomicilio")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValueSql("'Pendiente'");

                    b.Property<DateTime?>("FechaEntrega")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Observacion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("PedidoId")
                        .HasColumnType("int")
                        .HasColumnName("PedidoID");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    b.HasKey("DomicilioId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "PedidoId" }, "PedidoID")
                        .HasDatabaseName("PedidoID1");

                    b.HasIndex(new[] { "UsuarioId" }, "UsuarioID");

                    b.ToTable("domicilio", (string)null);
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Lote", b =>
                {
                    b.Property<int>("LoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LoteID");

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("CantidadCompra")
                        .HasColumnType("int");

                    b.Property<int?>("CantidadCompraPorUnidad")
                        .HasColumnType("int");

                    b.Property<int?>("CantidadPorUnidad")
                        .HasColumnType("int");

                    b.Property<int?>("CantidadPorUnidadCompra")
                        .HasColumnType("int");

                    b.Property<int?>("DetalleCompraId")
                        .HasColumnType("int")
                        .HasColumnName("DetalleCompraID");

                    b.Property<ulong?>("EstadoLote")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("b'1'");

                    b.Property<DateTime?>("FechaVencimiento")
                        .HasColumnType("date");

                    b.Property<string>("NumeroLote")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal?>("PrecioCompra")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PrecioPorPresentacion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PrecioPorPresentacionCompra")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PrecioPorUnidad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PrecioPorUnidadCompra")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PrecioPorUnidadProducto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PrecioPorUnidadProductoCompra")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ProductoId")
                        .HasColumnType("int")
                        .HasColumnName("ProductoID");

                    b.Property<int?>("UnidadId")
                        .HasColumnType("int")
                        .HasColumnName("UnidadID");

                    b.HasKey("LoteId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "DetalleCompraId" }, "DetalleCompraID");

                    b.HasIndex(new[] { "ProductoId" }, "ProductoID")
                        .HasDatabaseName("ProductoID1");

                    b.HasIndex(new[] { "UnidadId" }, "UnidadID")
                        .HasDatabaseName("UnidadID2");

                    b.ToTable("lote", (string)null);
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Marca", b =>
                {
                    b.Property<int>("MarcaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MarcaID");

                    b.Property<ulong?>("EstadoMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("b'1'");

                    b.Property<string>("NombreMarca")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("MarcaId")
                        .HasName("PRIMARY");

                    b.ToTable("marca", (string)null);
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Movimiento", b =>
                {
                    b.Property<int>("MovimientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MovimientoID");

                    b.Property<int?>("BuscarId")
                        .HasColumnType("int")
                        .HasColumnName("BuscarID");

                    b.Property<DateTime?>("FechaMovimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("TipoAccion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TipoMovimiento")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("MovimientoId")
                        .HasName("PRIMARY");

                    b.ToTable("movimientos", (string)null);
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Pedido", b =>
                {
                    b.Property<int>("PedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PedidoID");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int")
                        .HasColumnName("ClienteID");

                    b.Property<string>("EstadoPedido")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasDefaultValueSql("'Pendiente'");

                    b.Property<DateTime?>("FechaPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("TipoServicio")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("ValorTotalPedido")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("PedidoId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ClienteId" }, "ClienteID");

                    b.ToTable("pedido", (string)null);
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Permiso", b =>
                {
                    b.Property<int>("PermisoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PermisoID");

                    b.Property<ulong?>("EstadoPermiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("b'1'");

                    b.Property<string>("NombrePermiso")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("PermisoId")
                        .HasName("PRIMARY");

                    b.ToTable("permiso", (string)null);
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Presentacion", b =>
                {
                    b.Property<int>("PresentacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PresentacionID");

                    b.Property<int?>("CantidadPorPresentacion")
                        .HasColumnType("int");

                    b.Property<string>("Contenido")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DescripcionPresentacion")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasDefaultValueSql("'N/A'");

                    b.Property<ulong?>("EstadoPresentacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("b'1'");

                    b.Property<string>("NombreCompletoPresentacion")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NombrePresentacion")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("PresentacionId")
                        .HasName("PRIMARY");

                    b.ToTable("presentacion", (string)null);
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Producto", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductoID");

                    b.Property<string>("AplicarFechaDeVencimiento")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<int?>("CantidadAplicarPorMayor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("'0'");

                    b.Property<int?>("CantidadPorUnidadReservada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("'0'");

                    b.Property<int?>("CantidadReservada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("'0'");

                    b.Property<int?>("CantidadTotal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("'0'");

                    b.Property<int?>("CantidadTotalPorUnidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("'0'");

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int")
                        .HasColumnName("CategoriaID");

                    b.Property<int?>("DescuentoAplicarPorMayor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("'0'");

                    b.Property<ulong?>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("b'1'");

                    b.Property<int?>("MarcaId")
                        .HasColumnType("int")
                        .HasColumnName("MarcaID");

                    b.Property<string>("NombreCompletoProducto")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("NombreProducto")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("PresentacionId")
                        .HasColumnType("int")
                        .HasColumnName("PresentacionID");

                    b.HasKey("ProductoId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CategoriaId" }, "CategoriaID");

                    b.HasIndex(new[] { "MarcaId" }, "MarcaID")
                        .HasDatabaseName("MarcaID1");

                    b.HasIndex(new[] { "PresentacionId" }, "PresentacionID")
                        .HasDatabaseName("PresentacionID1");

                    b.ToTable("productos", (string)null);
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Proveedor", b =>
                {
                    b.Property<int>("ProveedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProveedorID");

                    b.Property<string>("Correo")
                        .HasMaxLength(75)
                        .HasColumnType("varchar(75)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<ulong?>("EstadoProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("b'1'");

                    b.Property<string>("NombreContacto")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NombreEmpresa")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("ProveedorId")
                        .HasName("PRIMARY");

                    b.ToTable("proveedor", (string)null);
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Rol", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RolID");

                    b.Property<ulong?>("EstadoRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("b'1'");

                    b.Property<string>("NombreRol")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("RolId")
                        .HasName("PRIMARY");

                    b.ToTable("rol", (string)null);
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Rolxpermiso", b =>
                {
                    b.Property<int>("RolxPermisoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RolxPermisoID");

                    b.Property<string>("NombrePermisoxRol")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("PermisoId")
                        .HasColumnType("int")
                        .HasColumnName("PermisoID");

                    b.Property<int?>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("RolID");

                    b.HasKey("RolxPermisoId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "PermisoId" }, "PermisoID");

                    b.HasIndex(new[] { "RolId" }, "RolID");

                    b.ToTable("rolxpermiso", (string)null);
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Unidad", b =>
                {
                    b.Property<int>("UnidadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UnidadID");

                    b.Property<int?>("CantidadPorUnidad")
                        .HasColumnType("int");

                    b.Property<string>("DescripcionUnidad")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValueSql("'N/A'");

                    b.Property<ulong?>("EstadoUnidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("b'1'");

                    b.Property<string>("NombreCompletoUnidad")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NombreUnidad")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("UnidadId")
                        .HasName("PRIMARY");

                    b.ToTable("unidad", (string)null);
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.UnidadxProducto", b =>
                {
                    b.Property<int>("UnidadId")
                        .HasColumnType("int")
                        .HasColumnName("UnidadID");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int")
                        .HasColumnName("ProductoID");

                    b.Property<ulong?>("EstadoProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("b'1'");

                    b.Property<string>("NombreCompletoProducto")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NombreCompletoUnidad")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("UnidadId", "ProductoId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ProductoId" }, "ProductoID")
                        .HasDatabaseName("ProductoID2");

                    b.ToTable("unidadxproducto", (string)null);
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    b.Property<string>("Apellido")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contraseña")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Correo")
                        .HasMaxLength(75)
                        .HasColumnType("varchar(75)");

                    b.Property<ulong?>("EstadoUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("b'1'");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("RolID");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Usuario1")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Usuario");

                    b.HasKey("UsuarioId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "RolId" }, "RolID")
                        .HasDatabaseName("RolID1");

                    b.ToTable("usuarios", (string)null);
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Compra", b =>
                {
                    b.HasOne("API_OPTIMUS.Entities.Proveedor", "Proveedor")
                        .WithMany("Compras")
                        .HasForeignKey("ProveedorId")
                        .HasConstraintName("compras_ibfk_1");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Detallecompra", b =>
                {
                    b.HasOne("API_OPTIMUS.Entities.Compra", "Compra")
                        .WithMany("Detallecompras")
                        .HasForeignKey("CompraId")
                        .HasConstraintName("detallecompras_ibfk_1");

                    b.Navigation("Compra");
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Detallepedido", b =>
                {
                    b.HasOne("API_OPTIMUS.Entities.Lote", "Lote")
                        .WithMany("Detallepedidos")
                        .HasForeignKey("LoteId")
                        .HasConstraintName("detallepedido_ibfk_4");

                    b.HasOne("API_OPTIMUS.Entities.Pedido", "Pedido")
                        .WithMany("Detallepedidos")
                        .HasForeignKey("PedidoId")
                        .HasConstraintName("detallepedido_ibfk_2");

                    b.HasOne("API_OPTIMUS.Entities.Producto", "Producto")
                        .WithMany("Detallepedidos")
                        .HasForeignKey("ProductoId")
                        .HasConstraintName("detallepedido_ibfk_1");

                    b.HasOne("API_OPTIMUS.Entities.Unidad", "Unidad")
                        .WithMany("Detallepedidos")
                        .HasForeignKey("UnidadId")
                        .HasConstraintName("detallepedido_ibfk_3");

                    b.Navigation("Lote");

                    b.Navigation("Pedido");

                    b.Navigation("Producto");

                    b.Navigation("Unidad");
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Domicilio", b =>
                {
                    b.HasOne("API_OPTIMUS.Entities.Pedido", "Pedido")
                        .WithMany("Domicilios")
                        .HasForeignKey("PedidoId")
                        .HasConstraintName("domicilio_ibfk_1");

                    b.HasOne("API_OPTIMUS.Entities.Usuario", "Usuario")
                        .WithMany("Domicilios")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("domicilio_ibfk_2");

                    b.Navigation("Pedido");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Lote", b =>
                {
                    b.HasOne("API_OPTIMUS.Entities.Detallecompra", "DetalleCompra")
                        .WithMany("Lotes")
                        .HasForeignKey("DetalleCompraId")
                        .HasConstraintName("lote_ibfk_2");

                    b.HasOne("API_OPTIMUS.Entities.Producto", "Producto")
                        .WithMany("Lotes")
                        .HasForeignKey("ProductoId")
                        .HasConstraintName("lote_ibfk_1");

                    b.HasOne("API_OPTIMUS.Entities.Unidad", "Unidad")
                        .WithMany("Lotes")
                        .HasForeignKey("UnidadId")
                        .HasConstraintName("lote_ibfk_3");

                    b.Navigation("DetalleCompra");

                    b.Navigation("Producto");

                    b.Navigation("Unidad");
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Pedido", b =>
                {
                    b.HasOne("API_OPTIMUS.Entities.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId")
                        .HasConstraintName("pedido_ibfk_1");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Producto", b =>
                {
                    b.HasOne("API_OPTIMUS.Entities.Categoria", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("CategoriaId")
                        .HasConstraintName("productos_ibfk_3");

                    b.HasOne("API_OPTIMUS.Entities.Marca", "Marca")
                        .WithMany("Productos")
                        .HasForeignKey("MarcaId")
                        .HasConstraintName("productos_ibfk_2");

                    b.HasOne("API_OPTIMUS.Entities.Presentacion", "Presentacion")
                        .WithMany("Productos")
                        .HasForeignKey("PresentacionId")
                        .HasConstraintName("productos_ibfk_1");

                    b.Navigation("Categoria");

                    b.Navigation("Marca");

                    b.Navigation("Presentacion");
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Rolxpermiso", b =>
                {
                    b.HasOne("API_OPTIMUS.Entities.Permiso", "Permiso")
                        .WithMany("Rolxpermisos")
                        .HasForeignKey("PermisoId")
                        .HasConstraintName("rolxpermiso_ibfk_1");

                    b.HasOne("API_OPTIMUS.Entities.Rol", "Rol")
                        .WithMany("Rolxpermisos")
                        .HasForeignKey("RolId")
                        .HasConstraintName("rolxpermiso_ibfk_2");

                    b.Navigation("Permiso");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Usuario", b =>
                {
                    b.HasOne("API_OPTIMUS.Entities.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .HasConstraintName("usuarios_ibfk_1");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Cliente", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Compra", b =>
                {
                    b.Navigation("Detallecompras");
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Detallecompra", b =>
                {
                    b.Navigation("Lotes");
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Lote", b =>
                {
                    b.Navigation("Detallepedidos");
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Marca", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Pedido", b =>
                {
                    b.Navigation("Detallepedidos");

                    b.Navigation("Domicilios");
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Permiso", b =>
                {
                    b.Navigation("Rolxpermisos");
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Presentacion", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Producto", b =>
                {
                    b.Navigation("Detallepedidos");

                    b.Navigation("Lotes");
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Proveedor", b =>
                {
                    b.Navigation("Compras");
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Rol", b =>
                {
                    b.Navigation("Rolxpermisos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Unidad", b =>
                {
                    b.Navigation("Detallepedidos");

                    b.Navigation("Lotes");
                });

            modelBuilder.Entity("API_OPTIMUS.Entities.Usuario", b =>
                {
                    b.Navigation("Domicilios");
                });
#pragma warning restore 612, 618
        }
    }
}
